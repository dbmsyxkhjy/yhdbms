
// DBMS.cpp : 定义应用程序的类行为。
//

#include "stdafx.h"
#include "afxwinappex.h"
#include "afxdialogex.h"
#include "DBMS.h"
#include "MainFrm.h"

#include "DBMSDoc.h"
#include "DBMSView.h"
#include "CreateDB.h"
#include "OpenDB.h"
#include "AddTable.h"
#include "ModifyTable.h"
#include "OpenTable.h"
#include "DeleteTable.h"
#include "AddField.h"
#include "ModifyField.h"
#include "DeleteField.h"
#include "CheckRecord.h"
#include "CheckRecord2.h"
#include "CheckRecord3.h"
#include "DeleteDatabase.h"

#ifdef _DEBUG
#define new DEBUG_NEW
#endif


// CDBMSApp

BEGIN_MESSAGE_MAP(CDBMSApp, CWinApp)
	ON_COMMAND(ID_APP_ABOUT, &CDBMSApp::OnAppAbout)
	// 基于文件的标准文档命令
	ON_COMMAND(ID_FILE_NEW, &CWinApp::OnFileNew)
	ON_COMMAND(ID_FILE_OPEN, &CWinApp::OnFileOpen)
	// 标准打印设置命令
	ON_COMMAND(ID_FILE_PRINT_SETUP, &CWinApp::OnFilePrintSetup)
	ON_COMMAND(ID_CreateDatabase, &CDBMSApp::OnCreatedatabase)
	ON_COMMAND(ID_OpenDatabase, &CDBMSApp::OnOpendatabase)
	ON_COMMAND(ID_NewTable, &CDBMSApp::OnNewtable)
	ON_COMMAND(ID_ModifyTable, &CDBMSApp::OnModifytable)
	ON_COMMAND(ID_OpenTable, &CDBMSApp::OnOpentable)
	ON_COMMAND(ID_DeleteTable, &CDBMSApp::OnDeletetable)
	ON_COMMAND(ID_AddField, &CDBMSApp::OnAddfield)
	ON_COMMAND(ID_ModifyField, &CDBMSApp::OnModifyfield)
	ON_COMMAND(ID_DeleteField, &CDBMSApp::OnDeletefield)
	ON_COMMAND(ID_AddRecord, &CDBMSApp::OnAddrecord)
	ON_COMMAND(ID_ModifyRecord, &CDBMSApp::OnModifyrecord)
	ON_COMMAND(ID_DeleteRecord, &CDBMSApp::OnDeleterecord)
	ON_COMMAND(ID_DATABASE_DELETEDATABASE, &CDBMSApp::OnDatabaseDeletedatabase)
END_MESSAGE_MAP()


// CDBMSApp 构造

CDBMSApp::CDBMSApp()
{
	// 支持重新启动管理器
	m_dwRestartManagerSupportFlags = AFX_RESTART_MANAGER_SUPPORT_ALL_ASPECTS;
#ifdef _MANAGED
	// 如果应用程序是利用公共语言运行时支持(/clr)构建的，则:
	//     1) 必须有此附加设置，“重新启动管理器”支持才能正常工作。
	//     2) 在您的项目中，您必须按照生成顺序向 System.Windows.Forms 添加引用。
	System::Windows::Forms::Application::SetUnhandledExceptionMode(System::Windows::Forms::UnhandledExceptionMode::ThrowException);
#endif

	// TODO: 将以下应用程序 ID 字符串替换为唯一的 ID 字符串；建议的字符串格式
	//为 CompanyName.ProductName.SubProduct.VersionInformation
	SetAppID(_T("DBMS.AppID.NoVersion"));

	// TODO: 在此处添加构造代码，
	// 将所有重要的初始化放置在 InitInstance 中
}

// 唯一的一个 CDBMSApp 对象

CDBMSApp theApp;


// CDBMSApp 初始化

BOOL CDBMSApp::InitInstance()
{
	// 如果一个运行在 Windows XP 上的应用程序清单指定要
	// 使用 ComCtl32.dll 版本 6 或更高版本来启用可视化方式，
	//则需要 InitCommonControlsEx()。否则，将无法创建窗口。
	INITCOMMONCONTROLSEX InitCtrls;
	InitCtrls.dwSize = sizeof(InitCtrls);
	// 将它设置为包括所有要在应用程序中使用的
	// 公共控件类。
	InitCtrls.dwICC = ICC_WIN95_CLASSES;
	InitCommonControlsEx(&InitCtrls);

	CWinApp::InitInstance();


	// 初始化 OLE 库
	if (!AfxOleInit())
	{
		AfxMessageBox(IDP_OLE_INIT_FAILED);
		return FALSE;
	}

	AfxEnableControlContainer();

	EnableTaskbarInteraction(FALSE);

	// 使用 RichEdit 控件需要  AfxInitRichEdit2()	
	// AfxInitRichEdit2();

	// 标准初始化
	// 如果未使用这些功能并希望减小
	// 最终可执行文件的大小，则应移除下列
	// 不需要的特定初始化例程
	// 更改用于存储设置的注册表项
	// TODO: 应适当修改该字符串，
	// 例如修改为公司或组织名
	SetRegistryKey(_T("应用程序向导生成的本地应用程序"));
	LoadStdProfileSettings(4);  // 加载标准 INI 文件选项(包括 MRU)


	// 注册应用程序的文档模板。文档模板
	// 将用作文档、框架窗口和视图之间的连接
	CSingleDocTemplate* pDocTemplate;
	pDocTemplate = new CSingleDocTemplate(
		IDR_MAINFRAME,
		RUNTIME_CLASS(CDBMSDoc),
		RUNTIME_CLASS(CMainFrame),       // 主 SDI 框架窗口
		RUNTIME_CLASS(CDBMSView));
	if (!pDocTemplate)
		return FALSE;
	AddDocTemplate(pDocTemplate);


	// 分析标准 shell 命令、DDE、打开文件操作的命令行
	CCommandLineInfo cmdInfo;
	ParseCommandLine(cmdInfo);



	// 调度在命令行中指定的命令。如果
	// 用 /RegServer、/Register、/Unregserver 或 /Unregister 启动应用程序，则返回 FALSE。
	if (!ProcessShellCommand(cmdInfo))
		return FALSE;

	// 唯一的一个窗口已初始化，因此显示它并对其进行更新
	m_pMainWnd->ShowWindow(SW_SHOW);
	m_pMainWnd->UpdateWindow();
	// 仅当具有后缀时才调用 DragAcceptFiles
	//  在 SDI 应用程序中，这应在 ProcessShellCommand 之后发生
	return TRUE;
}

int CDBMSApp::ExitInstance()
{
	//TODO: 处理可能已添加的附加资源
	AfxOleTerm(FALSE);

	return CWinApp::ExitInstance();
}

// CDBMSApp 消息处理程序


// 用于应用程序“关于”菜单项的 CAboutDlg 对话框

class CAboutDlg : public CDialogEx
{
public:
	CAboutDlg();

// 对话框数据
	enum { IDD = IDD_ABOUTBOX };

protected:
	virtual void DoDataExchange(CDataExchange* pDX);    // DDX/DDV 支持

// 实现
protected:
	DECLARE_MESSAGE_MAP()
};

CAboutDlg::CAboutDlg() : CDialogEx(CAboutDlg::IDD)
{
}

void CAboutDlg::DoDataExchange(CDataExchange* pDX)
{
	CDialogEx::DoDataExchange(pDX);
}

BEGIN_MESSAGE_MAP(CAboutDlg, CDialogEx)
END_MESSAGE_MAP()

// 用于运行对话框的应用程序命令
void CDBMSApp::OnAppAbout()
{
	CAboutDlg aboutDlg;
	aboutDlg.DoModal();
}

// CDBMSApp 消息处理程序





void CDBMSApp::OnCreatedatabase()
{
	// TODO: 在此添加命令处理程序代码
	CCreateDB a;
	a.DoModal();
}


void CDBMSApp::OnOpendatabase()
{
	// TODO: 在此添加命令处理程序代码
	COpenDB a;
	a.DoModal();
	
}


void CDBMSApp::OnNewtable()
{
	// TODO: 在此添加命令处理程序代码
	CAddTable a;
	a.DoModal();

}


void CDBMSApp::OnModifytable()
{
	// TODO: 在此添加命令处理程序代码
	
	CModifyTable a;
	a.DoModal();
}


void CDBMSApp::OnOpentable()
{
	// TODO: 在此添加命令处理程序代码
	COpenTable a;
	a.DoModal();
}


void CDBMSApp::OnDeletetable()
{
	// TODO: 在此添加命令处理程序代码
	CDeleteTable a;
	a.DoModal();
}


void CDBMSApp::OnAddfield()
{
	// TODO: 在此添加命令处理程序代码
	CAddField a;
	a.DoModal();
}


void CDBMSApp::OnModifyfield()
{
	// TODO: 在此添加命令处理程序代码
	CModifyField a;
	a.DoModal();
}


void CDBMSApp::OnDeletefield()
{
	// TODO: 在此添加命令处理程序代码
	CDeleteField a;
	a.DoModal();
}


void CDBMSApp::OnAddrecord()
{
	// TODO: 在此添加命令处理程序代码
	CCheckRecord a;
	a.DoModal();


}


void CDBMSApp::OnModifyrecord()
{
	// TODO: 在此添加命令处理程序代码
	CCheckRecord2 a;
	a.DoModal();
}


void CDBMSApp::OnDeleterecord()
{
	// TODO: 在此添加命令处理程序代码
	CCheckRecord3 a;
	a.DoModal();
}


void CDBMSApp::OnDatabaseDeletedatabase()
{
	// TODO: 在此添加命令处理程序代码
	CDeleteDatabase a;
	a.DoModal();
}
